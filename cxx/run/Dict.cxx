//
// File generated by rootcint at Sat Dec 12 12:46:28 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void SpinTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SpinTree(void *p = 0);
   static void *newArray_SpinTree(Long_t size, void *p);
   static void delete_SpinTree(void *p);
   static void deleteArray_SpinTree(void *p);
   static void destruct_SpinTree(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SpinTree*)
   {
      ::SpinTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SpinTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SpinTree", ::SpinTree::Class_Version(), "./SpinTree.h", 13,
                  typeid(::SpinTree), DefineBehavior(ptr, ptr),
                  &::SpinTree::Dictionary, isa_proxy, 4,
                  sizeof(::SpinTree) );
      instance.SetNew(&new_SpinTree);
      instance.SetNewArray(&newArray_SpinTree);
      instance.SetDelete(&delete_SpinTree);
      instance.SetDeleteArray(&deleteArray_SpinTree);
      instance.SetDestructor(&destruct_SpinTree);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SpinTree*)
   {
      return GenerateInitInstanceLocal((::SpinTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SpinTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *SpinTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SpinTree::Class_Name()
{
   return "SpinTree";
}

//______________________________________________________________________________
const char *SpinTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SpinTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SpinTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SpinTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SpinTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SpinTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SpinTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SpinTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void SpinTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class SpinTree.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SpinTree::Class(),this);
   } else {
      R__b.WriteClassBuffer(SpinTree::Class(),this);
   }
}

//______________________________________________________________________________
void SpinTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SpinTree.
      TClass *R__cl = ::SpinTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventNumber", &EventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_n", &mc_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mc_pdgId", &mc_pdgId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mc_status", &mc_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mc_child_index", &mc_child_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mc_parent_index", &mc_parent_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mc_parents", &mc_parents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mc_pt", &mc_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mc_eta", &mc_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mc_phi", &mc_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mc_m", &mc_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mcevt_n", &mcevt_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_signal_process_id", &mcevt_signal_process_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_event_number", &mcevt_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_event_scale", &mcevt_event_scale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_alphaQCD", &mcevt_alphaQCD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_alphaQED", &mcevt_alphaQED);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_pdf_id1", &mcevt_pdf_id1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_pdf_id2", &mcevt_pdf_id2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_pdf_x1", &mcevt_pdf_x1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_pdf_x2", &mcevt_pdf_x2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_pdf_scale", &mcevt_pdf_scale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_pdf1", &mcevt_pdf1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_pdf2", &mcevt_pdf2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_weight", &mcevt_weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_nparticle", &mcevt_nparticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcevt_pileUpType", &mcevt_pileUpType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "polari", &polari);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tau_mode", &tau_mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tau2_mode", &tau2_mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu24i_tight", &EF_mu24i_tight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_EventNumber", &b_EventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_EF_mu24i_tight", &b_EF_mu24i_tight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mc_n", &b_mc_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mc_pt", &b_mc_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mc_m", &b_mc_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mc_eta", &b_mc_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mc_phi", &b_mc_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mc_status", &b_mc_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mc_pdgId", &b_mc_pdgId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mc_child_index", &b_mc_child_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mc_parent_index", &b_mc_parent_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mc_parents", &b_mc_parents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_n", &b_mcevt_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_signal_process_id", &b_mcevt_signal_process_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_event_number", &b_mcevt_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_event_scale", &b_mcevt_event_scale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_alphaQCD", &b_mcevt_alphaQCD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_alphaQED", &b_mcevt_alphaQED);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_pdf_id1", &b_mcevt_pdf_id1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_pdf_id2", &b_mcevt_pdf_id2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_pdf_x1", &b_mcevt_pdf_x1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_pdf_x2", &b_mcevt_pdf_x2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_pdf_scale", &b_mcevt_pdf_scale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_pdf1", &b_mcevt_pdf1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_pdf2", &b_mcevt_pdf2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_weight", &b_mcevt_weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_nparticle", &b_mcevt_nparticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_mcevt_pileUpType", &b_mcevt_pileUpType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_polari", &b_polari);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_tau_mode", &b_tau_mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_tau2_mode", &b_tau2_mode);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_SpinTree(void *p) {
      return  p ? new(p) ::SpinTree : new ::SpinTree;
   }
   static void *newArray_SpinTree(Long_t nElements, void *p) {
      return p ? new(p) ::SpinTree[nElements] : new ::SpinTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_SpinTree(void *p) {
      delete ((::SpinTree*)p);
   }
   static void deleteArray_SpinTree(void *p) {
      delete [] ((::SpinTree*)p);
   }
   static void destruct_SpinTree(void *p) {
      typedef ::SpinTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::SpinTree

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortgR_Dictionary();
   static void *new_vectorlEshortgR(void *p = 0);
   static void *newArray_vectorlEshortgR(Long_t size, void *p);
   static void delete_vectorlEshortgR(void *p);
   static void deleteArray_vectorlEshortgR(void *p);
   static void destruct_vectorlEshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<short>*)
   {
      vector<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short>", -2, "vector.dll", 0,
                  typeid(vector<short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<short>) );
      instance.SetNew(&new_vectorlEshortgR);
      instance.SetNewArray(&newArray_vectorlEshortgR);
      instance.SetDelete(&delete_vectorlEshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortgR);
      instance.SetDestructor(&destruct_vectorlEshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short> : new vector<short>;
   }
   static void *newArray_vectorlEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short>[nElements] : new vector<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortgR(void *p) {
      delete ((vector<short>*)p);
   }
   static void deleteArray_vectorlEshortgR(void *p) {
      delete [] ((vector<short>*)p);
   }
   static void destruct_vectorlEshortgR(void *p) {
      typedef vector<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<short>

namespace ROOT {
   void vectorlEvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double> >*)
   {
      vector<vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<double> >) );
      instance.SetNew(&new_vectorlEvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> > : new vector<vector<double> >;
   }
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> >[nElements] : new vector<vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete ((vector<vector<double> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete [] ((vector<vector<double> >*)p);
   }
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p) {
      typedef vector<vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<double> >

namespace ROOT {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<int> >

/********************************************************
* Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDict();

extern "C" void G__set_cpp_environmentDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("SpinTree.h");
  G__cpp_reset_tagtableDict();
}
#include <new>
extern "C" int G__cpp_dllrevDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* SpinTree */
static int G__Dict_587_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SpinTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SpinTree[n];
     } else {
       p = new((void*) gvp) SpinTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SpinTree;
     } else {
       p = new((void*) gvp) SpinTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_SpinTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SpinTree*) G__getstructoffset())->Init((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SpinTree*) G__getstructoffset())->GetEntry((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SpinTree*) G__getstructoffset())->GetNEn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SpinTree*) G__getstructoffset())->LoadTree((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SpinTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SpinTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SpinTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SpinTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SpinTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SpinTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SpinTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SpinTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_587_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SpinTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_587_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SpinTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SpinTree(*(SpinTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_SpinTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SpinTree G__TSpinTree;
static int G__Dict_587_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SpinTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SpinTree*) (soff+(sizeof(SpinTree)*i)))->~G__TSpinTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SpinTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SpinTree*) (soff))->~G__TSpinTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_587_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SpinTree* dest = (SpinTree*) G__getstructoffset();
   *dest = *(SpinTree*) libp->para[0].ref;
   const SpinTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* SpinTree */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDict {
 public:
  G__Sizep2memfuncDict(): p(&G__Sizep2memfuncDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDict::*p)();
};

size_t G__get_sizep2memfuncDict()
{
  G__Sizep2memfuncDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_SpinTree))) {
     SpinTree *G__Lderived;
     G__Lderived=(SpinTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_SpinTree),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* SpinTree */
static void G__setup_memvarSpinTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_SpinTree));
   { SpinTree *p; p=(SpinTree*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TTree),-1,-1,1,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fCurrent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCurrent=",0,"!current Tree number in a TChain");
   G__memvar_setup((void*)((long)(&p->EventNumber)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"EventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mc_n)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mc_n=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mc_pdgId)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"mc_pdgId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mc_status)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"mc_status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mc_child_index)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<vector<int> >"),-1,1,"mc_child_index=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mc_parent_index)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<vector<int> >"),-1,1,"mc_parent_index=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mc_parents)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<vector<int> >"),-1,1,"mc_parents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mc_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"mc_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mc_eta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"mc_eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mc_phi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"mc_phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mc_m)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"mc_m=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_n)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mcevt_n=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_signal_process_id)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"mcevt_signal_process_id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_event_number)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"mcevt_event_number=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_event_scale)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"mcevt_event_scale=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_alphaQCD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"mcevt_alphaQCD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_alphaQED)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"mcevt_alphaQED=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_pdf_id1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"mcevt_pdf_id1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_pdf_id2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"mcevt_pdf_id2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_pdf_x1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"mcevt_pdf_x1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_pdf_x2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"mcevt_pdf_x2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_pdf_scale)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"mcevt_pdf_scale=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_pdf1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"mcevt_pdf1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_pdf2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"mcevt_pdf2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_weight)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<vector<double> >"),-1,1,"mcevt_weight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_nparticle)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"mcevt_nparticle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mcevt_pileUpType)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,1,"mcevt_pileUpType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->polari)-(long)(p)),100,0,0,-1,-1,-1,1,"polari=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tau_mode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tau_mode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tau2_mode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tau2_mode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EF_mu24i_tight)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"EF_mu24i_tight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_EventNumber)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_EventNumber=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_EF_mu24i_tight)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_EF_mu24i_tight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_mc_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mc_n=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mc_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mc_pt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mc_m)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mc_m=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mc_eta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mc_eta=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mc_phi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mc_phi=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mc_status)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mc_status=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mc_pdgId)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mc_pdgId=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mc_child_index)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mc_child_index=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mc_parent_index)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mc_parent_index=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mc_parents)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mc_parents=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_n=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_signal_process_id)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_signal_process_id=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_event_number)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_event_number=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_event_scale)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_event_scale=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_alphaQCD)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_alphaQCD=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_alphaQED)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_alphaQED=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_pdf_id1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_pdf_id1=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_pdf_id2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_pdf_id2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_pdf_x1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_pdf_x1=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_pdf_x2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_pdf_x2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_pdf_scale)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_pdf_scale=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_pdf1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_pdf1=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_pdf2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_pdf2=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_weight)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_weight=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_nparticle)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_nparticle=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_mcevt_pileUpType)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_mcevt_pileUpType=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_polari)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_polari=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_tau_mode)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_tau_mode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->b_tau2_mode)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TBranch),-1,-1,1,"b_tau2_mode=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncSpinTree(void) {
   /* SpinTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_SpinTree));
   G__memfunc_setup("SpinTree",810,G__Dict_587_0_1, 105, G__get_linked_tagnum(&G__DictLN_SpinTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__Dict_587_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__Dict_587_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEn",545,G__Dict_587_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadTree",784,G__Dict_587_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_587_0_6, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SpinTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_587_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SpinTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_587_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SpinTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_587_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SpinTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_587_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_587_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SpinTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_587_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SpinTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_587_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SpinTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_587_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SpinTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SpinTree", 810, G__Dict_587_0_18, (int) ('i'), G__get_linked_tagnum(&G__DictLN_SpinTree), -1, 0, 1, 1, 1, 0, "u 'SpinTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SpinTree", 936, G__Dict_587_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_587_0_20, (int) ('u'), G__get_linked_tagnum(&G__DictLN_SpinTree), -1, 1, 1, 1, 1, 0, "u 'SpinTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__DictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_SpinTree = { "SpinTree" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDict() {
  G__DictLN_TClass.tagnum = -1 ;
  G__DictLN_TBuffer.tagnum = -1 ;
  G__DictLN_TMemberInspector.tagnum = -1 ;
  G__DictLN_TObject.tagnum = -1 ;
  G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DictLN_TTree.tagnum = -1 ;
  G__DictLN_TBranch.tagnum = -1 ;
  G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__DictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__DictLN_SpinTree.tagnum = -1 ;
  G__DictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TTree);
   G__get_linked_tagnum_fwd(&G__DictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseDiaglEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_SpinTree),sizeof(SpinTree),-1,292096,(char*)NULL,G__setup_memvarSpinTree,G__setup_memfuncSpinTree);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDict()");
  G__set_cpp_environmentDict();
  G__cpp_setup_tagtableDict();

  G__cpp_setup_inheritanceDict();

  G__cpp_setup_typetableDict();

  G__cpp_setup_memvarDict();

  G__cpp_setup_memfuncDict();
  G__cpp_setup_globalDict();
  G__cpp_setup_funcDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDict();
  return;
}
class G__cpp_setup_initDict {
  public:
    G__cpp_setup_initDict() { G__add_setup_func("Dict",(G__incsetup)(&G__cpp_setupDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDict() { G__remove_setup_func("Dict"); }
};
G__cpp_setup_initDict G__cpp_setup_initializerDict;

